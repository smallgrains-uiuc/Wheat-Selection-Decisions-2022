load("/Users/jrut/Documents/Teaching/CPSC554/2022/Exam 4/Exam 4 Data.RData")
ls()
load("/Users/jrut/Documents/Teaching/CPSC554/2022/Exam 4/Exam 4 Data.RData")
ls()
head(marginal_means)
M[1:5, 1:5]
head(map)
dim(map
)
dim(M)
row.names(map)<- colnames(M)
head(tbv)
dim(tbv)
dim(emmean)
dim(marginal_means)
marginal_means$emmean
head(tbv)
head(marginal_means)
match(marginal_means$phenoGID, tbv$phenoGID)
tbv[match(marginal_means$phenoGID, tbv$phenoGID),]
tbv[match(marginal_means$phenoGID, tbv$phenoGID),'tbv']
gvec<- tbv[match(marginal_means$phenoGID, tbv$phenoGID),'tbv']
var(gvec)
var(gvec)/ (var(gvec)+ 1)
var(gvec)/ [(var(gvec)+ 1)]
var(gvec)/ (var(gvec)+ 1))
var(gvec)/(var(gvec)+ 1))
var(gvec)/(var(gvec)+ 1)
var(gvec)/(var(gvec)+ 4)
var(gvec)/(var(gvec)+ 3)
sqrt(3)
rnorm(length(gvec), sd=1.73)
errvec<- rnorm(length(gvec), sd=1.73)
pvec<- gvec+errvec
cor(pvec, marginal_means$emmean)
marginal_means$emmean<- pvec
ls()
rm(errvec)
rm(gvec)
rm(ped)
rm(pheno)
rm(pvec)
ls()
trueMrkeffs
tbv
ls()
head(marginal_means)
head(map)
M[1:5, 1:5]
save.image("/Users/jrut/Documents/Teaching/CPSC554/2022/Exam 4/Exam 4 Data.RData")
dim(M)
dim(marginal_means)
load("/Users/jrut/Documents/Teaching/CPSC554/2022/Exam 3/Exam3Data 2022.RData")
load("/Users/jrut/Documents/Teaching/CPSC554/2022/Exam 3/Exam3Data 2022.RData")
library(lme4)
library(rrBLUP)
library(pedigreemm)
library(arm)
ls()
head(pheno)
pheno$se
pheno$env
dat<- read.csv("~/Documents/Wheat/2021/Data Upload Files/check urbana yield trial data/Maxwell2021_mirusfile_curated.csv", as.is=TRUE)
head(dat)
adv<- dat[which(dat$X.studyName. == 'Adv_Urb_21'),]
head(adv)
mf<- (100-dat$Moisture)/(100-13.5)
dat$WeightAdj<- dat$Weight*mf
pltsizeIn<- 51*108
pltsizeAc<- pltsizeIn/6272640
dat$buperacre<- (dat$WeightAdj/60)/pltsizeAc
library(lme4)
library(arm)
dat$X.blockNumber.<- as.character(dat$X.blockNumber.)
adv<- dat[which(dat$X.studyName. == 'Adv_Urb_21'),]
adv
is.na(adv$buperacre)
which(!is.na(adv$buperacre))
adv<- adv[which(!is.na(adv$buperacre)),]
head(adv)
mod<- lmer(buperacre~1+(1|X.germplasmName.)+(1|X.blockNumber.), adv)
summary(mod)
str(summary(mod))
summary(mod)$varcor
summary(mod)$varcor
as.data.frame(summary(mod)$varcor)
str(summary(mod)$varcor)
vc<- as.data.frame(summary(mod)$varcor)
vc
Vg<- vc[1,'vcov']
Vg
Verror<- vc[3,'vcov']
Verror
ranef(mod)$X.germplasmName.
blups<- ranef(mod)$X.germplasmName.
ranef(mod)
<- ranef(mod)$X.germplasmName.
blups
str(blups)
hist(blups)
hist(blups[,1])
order(blups[,1])
blups[order(blups[,1]),]
names<- row.names(blups)
blups<- blups[,1]
blups
names(blups)<- names
blups
sort(blups)
fixef(mod)
mean(c(11.77113142, 7.35383228, 8.09137208))
se.ranef(mod)$X.germplasmName.
pev<0 se.ranef(mod)$X.germplasmName.^2
pev<- se.ranef(mod)$X.germplasmName.^2
pev
pev[,1]
pev[,1]
pev<- pev[,1]
rel<- 1-pev/Vg
rel
Vg/(Vg+Verror/2)
load("/Users/jrut/Library/CloudStorage/Box-Box/UIUC_SQW_Breeding_Workshop/Jessica- Day 1 presentations/PM2 Exercise/Breeding Population Data.RData")
ls()
load("/Users/jrut/Library/CloudStorage/Box-Box/UIUC_SQW_Breeding_Workshop/Jessica- Day 1 presentations/PM2 Exercise/Breeding Population Data.RData")
ls()
head(pheno)
tail(pheno)
pheno$loc
ls()
head(marginal_means)
tail(marginal_means)
head(pheno)
tail(marginal_means)
ls()
head(tbv)
tail(tbv)
M[1:10, 1:10]
dim(M)
pheno$env<- paste(pheno$loc, pheno$year, sep="_")
library(lme4)
library(lme4)
mod_iid<- lmer(pValue=1+loc+(1|phenoGID), data=pheno,
subset= which(pheno$year=='2'))
mod_iid<- lmer(pValue~1+loc+(1|phenoGID), data=pheno,
subset= which(pheno$year=='2'))
rslt<- ranef(mod_iid)$phenoGID
head(rslt)
rslt<- data.frame(phenoGID= row.names(rslt), blup=rslt[,1])
head(rslt)
rslt<- data.frame(phenoGID= row.names(rslt), blup_iid=rslt[,1])
rslt[order(rslt$blup_iid, decreasing=TRUE), ][1:10,]
rslt<- ranef(mod_iid)$phenoGID
rslt<- data.frame(phenoGID= row.names(rslt), blup_iid=rslt[,1])
rslt[order(rslt$blup_iid, decreasing=TRUE), ][1:10,]
#compute reliability
library(arm)
se_blupiid<- se.ranef(mod_iid)$phenoGID
vcomp<- data.frame(VarCorr(mod_iid))
vcomp
Vg<- vcomp[vcomp$grp=='phenoGID', 'vcov']
pev<- se_blupiid^2
rel<- 1-pev/Vg
rel
se_blupiid
se_blupiid^2
pev
rel<- 1-pev/Vg
sel_acc<- sqrt(rel)
sel_acc
#Genomic BLUP
Msub<- M[levels(pheno$phenoGID),]
library(rrBLUP)
Gsub<- A.mat(Msub)
G[1:5, 1:5]
Gsub[1:5, 1:5]
#Design matrices
X<- model.matrix(pValue~1+env, data=pheno)
head(X)
View(X)
Z<- model.matrix(pValue~0+phenoGID, data=pheno)
y<- pheno$pValue
head(pheno)
head(pheno)
plot(pheno$se)
#Pre- multiplied design matrices
X2<- X/pheno$se
#Pre- multiplied design matrices
X2<- X/pheno$se
y2<- y/pheno$se
X2<- Z/pheno$se
#Pre- multiplied design matrices
X2<- X/pheno$se
y2<- y/pheno$se
Z2<- Z/pheno$se
#fit model
mod<- mixed.solve(y2, Z2, Gsub, X2)
str(mod)
str(mod)
rsltGBLUP<- data.frame(phenoGID= names(mod$u), blup_GBLUP=mod$u)
head(rslt(BLUP))
head(rsltGBLUP)
#combine results
bluprslt<- merge(rsltGBLUP, rslt, by='phenoGID')
head(bluprslt)
#combine results
bluprslt<- merge(rsltGBLUP, rslt, by='phenoGID', all.x=TRUE)
head(bluprslt)
#combine with tbv
allbv<- merge(bluprslt, tbv, by='phenoGID')
head(allbv)
cor(na.omit(allbv[,-1]))
setwd("~/Documents/GitHub/Wheat-Selection-Decisions-2022")
library(reshape)
#read in analysis results
blups_Agronomic<- read.csv('blups_AgronomicJul18.csv', row.names=1)
gebvs_Agronomic<- read.csv('gebvsIL22_Agronomic.csv', row.names=1)
gebvs_Scab<- read.csv('GEBVscab.csv', row.names=1)
setwd("~/Documents/GitHub/Wheat-Selection-Decisions-2022")
library(reshape)
#read in analysis results
blups_Agronomic<- read.csv('blups_AgronomicJul18.csv', row.names=1)
gebvs_Agronomic<- read.csv('gebvsIL22_Agronomic.csv', row.names=1)
gebvs_Scab<- read.csv('GEBVscab.csv', row.names=1)
View(gebvs_Scab)
blups_Scab<- read.csv('BLUPscabJul18.csv', row.names=1)
#read in analysis results
blups_Agronomic<- read.csv('blups_AgronomicJul18.csv', row.names=1)
gebvs_Agronomic<- read.csv('gebvsIL22_Agronomic.csv', row.names=1)
gebvs_Scab<- read.csv('GEBVscab.csv', row.names=1)
blups_Scab<- read.csv('BLUPscabJul18.csv', row.names=1)
#lines licensed last year or in cooperative testing
lines_stage5<- read.csv('Stage5Lines.csv')
lines_stage5<- data.frame(Stage=5, lines_stage5)
#read in pedigree and breeding stage information
finalDesign<- read.csv('FinalDesignPlan_Aug24.csv')[,c('Stage', 'germplasmName', 'purdy.pedigree')]
finalDesign<- rbind(finalDesign, lines_stage5)
#Make results in wide format
blups_AgronomicW<- cast(blups_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_AgronomicW<- cast(gebvs_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_ScabW<- cast(gebvs_Scab, germplasmName~trait, value='predicted.value')
blups_ScabW<- cast(blups_Scab, germplasmName~trait, value='predicted.value')
#combine scab with agronomic
blups<- merge(blups_AgronomicW, blups_ScabW, by='germplasmName', all=TRUE)
#combine with metadata
blups<- merge(finalDesign, blups, by='germplasmName')
gebvs<- merge(finalDesign, gebvs, by='germplasmName')
gebvs<- merge(gebvs_AgronomicW, gebvs_ScabW, by='germplasmName', all=TRUE)
#combine with metadata
blups<- merge(finalDesign, blups, by='germplasmName')
gebvs<- merge(finalDesign, gebvs, by='germplasmName')
##For net merit calcualtion
wheat_price0<- mean(c(9.9128, 7.0402, 5.4621, 4.9414, 4.9757, 4.4014, 4.3945))
soybean_price<- mean(c(16.1773, 13.6890, 9.5344, 8.9298, 9.3456, 9.7820, 9.8753))
#wheat price fcn
wheatPrice<- function(fdk, don, twt, wheat_price0){
if(don==0){
donDiscount<- 0
}else{
donDiscount<- don*-0.2
}
if(fdk==0){
fdkDiscount<- 0
}else{
fdkDiscount<- fdk*(-0.04/5)
}
twtDiscount<- c(58-twt)*-.2
twtDiscount[which(twtDiscount>0)]<- 0
wheat_price<- wheat_price0+donDiscount+fdkDiscount+twtDiscount
return(wheat_price)
}
#net merit function
netMerit<- function(headings, yields, dons, fdks, twt, wheat_price0, soybean_price){
wheat_price1<- wheatPrice(fdks, dons, twt, wheat_price0)
soy_yld_gain<- 0.5* (137.7407-headings)
soy_profit_gain<- soy_yld_gain*soybean_price
wheat_profit<- yields*wheat_price1
total_profit<- wheat_profit + soy_profit_gain
return(total_profit)
}
blups<- data.frame(blups, merit=netMerit(blups$`Heading.time...Julian.date..JD..`,
blups$`Grain.yield...bu.ac`,
blups$`FHB.DON.content...ppm.`,
blups$`FHB.grain.incidence.....`,
blups$`Grain.test.weight...lbs.bu`,
wheat_price0, soybean_price))
blups<- blups[order(blups$merit, decreasing=TRUE),]
gebvs<- data.frame(gebvs, merit=netMerit(gebvs$`Heading.time...Julian.date..JD..`,
gebvs$`Grain.yield...bu.ac`,
gebvs$`FHB.DON.content...ppm.`,
gebvs$`FHB.grain.incidence.....`,
gebvs$`Grain.test.weight...lbs.bu`,
wheat_price0, soybean_price))
gebvs<- gebvs[order(gebvs$merit, decreasing=TRUE),]
#make stage 1 to stage 2 decisions
gebvs_stage1<- gebvs[which(gebvs$Stage==1),]
#add selection codes
gebvs_stage1<- data.frame(gebvs_stage1, merit_sel=0, yield_sel=0, height_sel=0, heading_sel=0, final_sel=0)
#merit
gebvs_stage1[which(gebvs_stage1$merit>gebvs_stage1$merit[376]),'merit_sel']<- 1
#height
gebvs_stage1[which(gebvs_stage1$`Plant.height.inches`<38.5),'height_sel']<- 1
#yield
gebvs_stage1[which(gebvs_stage1$`Grain.yield...bu.ac`>sort(gebvs_stage1$`Grain.yield...bu.ac`, decreasing=TRUE)[351]),'yield_sel']<- 1
#heading
gebvs_stage1[which(gebvs_stage1$`Heading.time...Julian.date..JD..`<131.2474),'heading_sel']<- 1
#final selection
gebvs_stage1[which(gebvs_stage1$merit_sel ==1 & gebvs_stage1$height_sel ==1),'final_sel']<- 1
#remove lost seed
gebvs_stage1[which(gebvs_stage1$germplasmName %in% c('IL2021-2915','IL2021-24512','2020-6201','2020-6171')),'final_sel']<- 0
#make agronomic traits table
blups<- blups[order(blups$merit, decreasing=TRUE),]
#make agronomic traits table
blups<- blups[order(blups$merit, decreasing=TRUE),]
blups$merit
setwd("~/Documents/GitHub/Wheat-Selection-Decisions-2022")
library(reshape)
#read in analysis results
blups_Agronomic<- read.csv('blups_AgronomicJul18.csv', row.names=1)
gebvs_Agronomic<- read.csv('gebvsIL22_Agronomic.csv', row.names=1)
gebvs_Scab<- read.csv('GEBVscab.csv', row.names=1)
blups_Scab<- read.csv('BLUPscabJul18.csv', row.names=1)
#lines licensed last year or in cooperative testing
lines_stage5<- read.csv('Stage5Lines.csv')
lines_stage5<- data.frame(Stage=5, lines_stage5)
#read in pedigree and breeding stage information
finalDesign<- read.csv('FinalDesignPlan_Aug24.csv')[,c('Stage', 'germplasmName', 'purdy.pedigree')]
finalDesign<- rbind(finalDesign, lines_stage5)
#Make results in wide format
blups_AgronomicW<- cast(blups_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_AgronomicW<- cast(gebvs_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_ScabW<- cast(gebvs_Scab, germplasmName~trait, value='predicted.value')
blups_ScabW<- cast(blups_Scab, germplasmName~trait, value='predicted.value')
#combine scab with agronomic
blups<- merge(blups_AgronomicW, blups_ScabW, by='germplasmName', all=TRUE)
gebvs<- merge(gebvs_AgronomicW, gebvs_ScabW, by='germplasmName', all=TRUE)
#combine with metadata
blups<- merge(finalDesign, blups, by='germplasmName')
gebvs<- merge(finalDesign, gebvs, by='germplasmName')
##For net merit calcualtion
wheat_price0<- mean(c(9.9128, 7.0402, 5.4621, 4.9414, 4.9757, 4.4014, 4.3945))
soybean_price<- mean(c(16.1773, 13.6890, 9.5344, 8.9298, 9.3456, 9.7820, 9.8753))
#wheat price fcn
wheatPrice<- function(fdk, don, twt, wheat_price0){
if(don==0){
donDiscount<- 0
}else{
donDiscount<- don*-0.2
}
if(fdk==0){
fdkDiscount<- 0
}else{
fdkDiscount<- fdk*(-0.04/5)
}
twtDiscount<- c(58-twt)*-.2
twtDiscount[which(twtDiscount>0)]<- 0
wheat_price<- wheat_price0+donDiscount+fdkDiscount+twtDiscount
return(wheat_price)
}
#net merit function
netMerit<- function(headings, yields, dons, fdks, twt, wheat_price0, soybean_price){
wheat_price1<- wheatPrice(fdks, dons, twt, wheat_price0)
soy_yld_gain<- 0.5* (137.7407-headings)
soy_profit_gain<- soy_yld_gain*soybean_price
wheat_profit<- yields*wheat_price1
total_profit<- wheat_profit + soy_profit_gain
return(total_profit)
}
blups<- data.frame(blups, merit=netMerit(blups$`Heading.time...Julian.date..JD..`,
blups$`Grain.yield...bu.ac`,
blups$`FHB.DON.content...ppm.`,
blups$`FHB.grain.incidence.....`,
blups$`Grain.test.weight...lbs.bu`,
wheat_price0, soybean_price))
blups<- blups[order(blups$merit, decreasing=TRUE),]
setwd("~/Documents/GitHub/Wheat-Selection-Decisions-2022")
library(reshape)
#read in analysis results
blups_Agronomic<- read.csv('blups_AgronomicJul18.csv', row.names=1)
gebvs_Agronomic<- read.csv('gebvsIL22_Agronomic.csv', row.names=1)
gebvs_Scab<- read.csv('GEBVscab.csv', row.names=1)
blups_Scab<- read.csv('BLUPscabJul18.csv', row.names=1)
#lines licensed last year or in cooperative testing
lines_stage5<- read.csv('Stage5Lines.csv')
lines_stage5<- data.frame(Stage=5, lines_stage5)
#read in pedigree and breeding stage information
finalDesign<- read.csv('FinalDesignPlan_Aug24.csv')[,c('Stage', 'germplasmName', 'purdy.pedigree')]
finalDesign<- rbind(finalDesign, lines_stage5)
#Make results in wide format
blups_AgronomicW<- cast(blups_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_AgronomicW<- cast(gebvs_Agronomic, germplasmName~trait, value='predicted.value')
gebvs_ScabW<- cast(gebvs_Scab, germplasmName~trait, value='predicted.value')
blups_ScabW<- cast(blups_Scab, germplasmName~trait, value='predicted.value')
#combine scab with agronomic
blups<- merge(blups_AgronomicW, blups_ScabW, by='germplasmName', all=TRUE)
gebvs<- merge(gebvs_AgronomicW, gebvs_ScabW, by='germplasmName', all=TRUE)
#combine with metadata
blups<- merge(finalDesign, blups, by='germplasmName')
gebvs<- merge(finalDesign, gebvs, by='germplasmName')
blups
##For net merit calcualtion
wheat_price0<- mean(c(9.9128, 7.0402, 5.4621, 4.9414, 4.9757, 4.4014, 4.3945))
soybean_price<- mean(c(16.1773, 13.6890, 9.5344, 8.9298, 9.3456, 9.7820, 9.8753))
#wheat price fcn
wheatPrice<- function(fdk, don, twt, wheat_price0){
if(don==0){
donDiscount<- 0
}else{
donDiscount<- don*-0.2
}
if(fdk==0){
fdkDiscount<- 0
}else{
fdkDiscount<- fdk*(-0.04/5)
}
twtDiscount<- c(58-twt)*-.2
twtDiscount[which(twtDiscount>0)]<- 0
wheat_price<- wheat_price0+donDiscount+fdkDiscount+twtDiscount
return(wheat_price)
}
#net merit function
netMerit<- function(headings, yields, dons, fdks, twt, wheat_price0, soybean_price){
wheat_price1<- wheatPrice(fdks, dons, twt, wheat_price0)
soy_yld_gain<- 0.5* (137.7407-headings)
soy_profit_gain<- soy_yld_gain*soybean_price
wheat_profit<- yields*wheat_price1
total_profit<- wheat_profit + soy_profit_gain
return(total_profit)
}
blups$`Heading.time...Julian.date..JD..`
blups$`Grain.yield...bu.ac`
head(blups)
cor(blups$North.Grain.yield...bu.ac, blups$South.Grain.yield...bu.ac)
plot(blups$North.Grain.yield...bu.ac, blups$South.Grain.yield...bu.ac)
cor(blups$North.Grain.yield...bu.ac, blups$South.Grain.yield...bu.ac)
plot(blups$North.Grain.yield...bu.ac, blups$South.Grain.yield...bu.ac)
blups<- data.frame(blups, meritSouth=netMerit(blups$`Heading.time...Julian.date..JD..`,
blups$`South.Grain.yield...bu.ac`,
blups$`FHB.DON.content...ppm.`,
blups$`FHB.grain.incidence.....`,
blups$`Grain.test.weight...lbs.bu`,
wheat_price0, soybean_price))
blups<- blups[order(blups$meritSouth, decreasing=TRUE),]
View(blups)
#make agronomic traits table
blups<- blups[order(blups$meritSouth, decreasing=TRUE),]
View(blups)
#add single trial data to the summary file
all<- read.csv('ILTrainingSetPhenotypesJuly.18.2022.csv', row.names=1)
allsub<- droplevels.data.frame(all[which(all$year>19),])
allsub$study<- gsub("_", "", allsub$study)
allsub[which(allsub$trait == "Grain.yield...bu.ac"),'trait']<- 'yield'
allsub[which(allsub$trait == "Heading.time...Julian.date..JD.."),'trait']<- 'heading'
allsub[which(allsub$trait == "Grain.test.weight...lbs.bu"),'trait']<- 'tw'
allsub[which(allsub$trait == "Plant.height.inches"),'trait']<- 'height'
allsub[which(allsub$trait == "FHB.DON.content...ppm."),'trait']<- 'DON'
allsub[which(allsub$trait == "FHB.grain.incidence....."),'trait']<- 'FDK'
alwide<- cast(allsub, germplasmName~trait+study, value='predicted.value')
blups2<- merge(blups, alwide, by='germplasmName')
#add missing pedigree data
#write.csv(blups$germplasmName, 'germplasmNames2022.csv')
#write.csv(c(blups[which(blups$purdy.pedigree==""),'germplasmName'], blups[which(is.na(blups$purdy.pedigree=="")),'germplasmName']),
#            file='pedigreeLookup.csv')
peds<- read.csv('foundPedigrees.csv')
for(i in 1:nrow(blups2)){
if(blups2$purdy.pedigree[i]=="" | is.na(blups2$purdy.pedigree[i])){
blups2$purdy.pedigree[i]<- peds[match(blups2$germplasmName[i], peds$accession_name),'purdy.pedigree']
}
}
#add SMBV results
sbmv<- read.csv("~/Documents/Wheat/2022/IL_SBMV_results.csv")
sbmv22<- sbmv[match(blups2$germplasmName, sbmv$name),'blup']
blups2$sbmv22<- sbmv22
#add seed amounts
lgi<- read.csv("~/Documents/Wheat/2022/LgI_Urb_22_seedlots_table.csv")
sinc<- read.csv("~/Documents/Wheat/2022/mirusFile_S600_seedlots.csv")
sinc[grep('mix', sinc$Quick.Note.),'Weight..lb.']<- 0
minc<- read.csv("~/Documents/Wheat/2022/wheat_medinc_seedlots.csv")
minc_des<- read.csv("~/Documents/Wheat/2022/minc_design.csv")
minc[grep('less', minc$Quick.Note.),'Weight..lb.']<- c(20, 20)
minc<- merge(minc_des, minc, by=c('Range.', 'Row.'))
lgiWt<- c()
sincWt<- c()
mincWt<- c()
for(i in 1:nrow(blups2)){
lgiWt<- append(lgiWt, sum(lgi[which(blups2$germplasmName[i] == lgi$accession_name),'Weight']))
sincWt<- append(sincWt, sum(sinc[which(blups2$germplasmName[i] == sinc$accession_name),'Weight..lb.']))
mincWt<- append(mincWt, sum(minc[which(blups2$germplasmName[i] == minc$germplasmName),'Weight..lb.']))
}
blups2$lgiWt<- lgiWt
blups2$sincWt<- sincWt
blups2$mincWt<- mincWt
write.csv(blups2, file='blups22_Jul18.csv')
